"use strict";
var express = require('express');
var bodyParser = require('body-parser');
var cors = require('cors');
var mongoose = require('mongoose');
exports.mongoose = mongoose;
var routes_1 = require('./routes');
var app = express();
var pathToNgPublic = __dirname + '/../ng-public';
var pathToNg2Public = __dirname + '/../ng2-public';
var pathToNgUpgradePublic = __dirname + '/../ng-upgrade-public';
app.use(bodyParser.json());
app.use(cors());
app.use(function (req, res, next) {
    if (req.is('text/*')) {
        req['text'] = '';
        req.setEncoding('utf8');
        req.on('data', function (chunk) { req['text'] += chunk; });
        req.on('end', next);
    }
    else {
        next();
    }
});
app.use('/node_modules', express.static(__dirname + '/../node_modules'));
app.use('/common-assets', express.static(__dirname + '/../common-assets'));
app.use('/ng-app', express.static(pathToNgPublic + '/app'));
app.use('/ng2-example/ng2-app', express.static(pathToNg2Public + '/app'));
app.use('/ng2-app', express.static(pathToNg2Public + '/app'));
app.use('/ng2-system-config.js', function (req, res) {
    res.sendFile('system.config.js', { root: __dirname + '/../ng2-public' });
});
app.use('/ng-upgrade-app', express.static(pathToNgUpgradePublic + '/app'));
app.use('/ng-upgrade-system-config.js', function (req, res) {
    res.sendFile('system.config.js', { root: __dirname + '/../ng-upgrade-public' });
});
routes_1.router(app);
app.all('/ng-example*', function (req, res) {
    res.sendFile('index.html', { root: pathToNgPublic });
});
app.all('/ng2-example*', function (req, res) {
    res.sendFile('index.html', { root: pathToNg2Public });
});
app.all('/ng-upgrade-example*', function (req, res) {
    res.sendFile('index.html', { root: pathToNgUpgradePublic });
});
app.all('/*', function (req, res) {
    res.sendFile('landing.html', { root: __dirname + '/..' });
});
mongoose.Promise = global.Promise;
mongoose.connect('mongodb://localhost/ng-upgrade-profiles');
mongoose.connection.once('open', function () {
    console.log('Mongoose connected to ng-upgrade-profiles db at "localhost:27017"');
});
app.listen('8787', function listener() {
    console.log('Express app listening at "http://localhost:8787/"');
});

//# sourceMappingURL=data:application/json;base64,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bURBQW1ELENBQUMsQ0FBQztBQUNsRSxDQUFDLENBQUMsQ0FBQztBQUVpQiIsImZpbGUiOiJzZXJ2ZXIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBleHByZXNzIGZyb20gJ2V4cHJlc3MnO1xyXG5pbXBvcnQgKiBhcyBib2R5UGFyc2VyIGZyb20gJ2JvZHktcGFyc2VyJztcclxuaW1wb3J0ICogYXMgY29ycyBmcm9tICdjb3JzJztcclxuaW1wb3J0ICogYXMgbW9uZ29vc2UgZnJvbSAnbW9uZ29vc2UnO1xyXG5cclxuaW1wb3J0IHsgcm91dGVyIH0gZnJvbSAnLi9yb3V0ZXMnO1xyXG5cclxubGV0IGFwcCA9IGV4cHJlc3MoKTtcclxubGV0IHBhdGhUb05nUHVibGljID0gX19kaXJuYW1lICsgJy8uLi9uZy1wdWJsaWMnO1xyXG5sZXQgcGF0aFRvTmcyUHVibGljID0gX19kaXJuYW1lICsgJy8uLi9uZzItcHVibGljJztcclxubGV0IHBhdGhUb05nVXBncmFkZVB1YmxpYyA9IF9fZGlybmFtZSArICcvLi4vbmctdXBncmFkZS1wdWJsaWMnO1xyXG5cclxuXHJcbmFwcC51c2UoYm9keVBhcnNlci5qc29uKCkpO1xyXG5hcHAudXNlKGNvcnMoKSk7XHJcbmFwcC51c2UoKHJlcSwgcmVzLCBuZXh0KSA9PiB7XHJcblx0aWYgKHJlcS5pcygndGV4dC8qJykpIHtcclxuXHRcdHJlcVsndGV4dCddID0gJyc7XHJcblx0XHRyZXEuc2V0RW5jb2RpbmcoJ3V0ZjgnKTtcclxuXHRcdHJlcS5vbignZGF0YScsIGZ1bmN0aW9uKGNodW5rKXsgcmVxWyd0ZXh0J10gKz0gY2h1bmsgfSk7XHJcblx0XHRyZXEub24oJ2VuZCcsIG5leHQpO1xyXG5cdH0gZWxzZSB7XHJcblx0XHRuZXh0KCk7XHJcblx0fVxyXG59KTtcclxuXHJcblxyXG5hcHAudXNlKCcvbm9kZV9tb2R1bGVzJywgZXhwcmVzcy5zdGF0aWMoX19kaXJuYW1lICsgJy8uLi9ub2RlX21vZHVsZXMnKSk7XHJcbmFwcC51c2UoJy9jb21tb24tYXNzZXRzJywgZXhwcmVzcy5zdGF0aWMoX19kaXJuYW1lICsgJy8uLi9jb21tb24tYXNzZXRzJykpO1xyXG5cclxuYXBwLnVzZSgnL25nLWFwcCcsIGV4cHJlc3Muc3RhdGljKHBhdGhUb05nUHVibGljICsgJy9hcHAnKSk7XHJcbmFwcC51c2UoJy9uZzItZXhhbXBsZS9uZzItYXBwJywgZXhwcmVzcy5zdGF0aWMocGF0aFRvTmcyUHVibGljICsgJy9hcHAnKSk7XHJcbmFwcC51c2UoJy9uZzItYXBwJywgZXhwcmVzcy5zdGF0aWMocGF0aFRvTmcyUHVibGljICsgJy9hcHAnKSk7XHJcbmFwcC51c2UoJy9uZzItc3lzdGVtLWNvbmZpZy5qcycsIChyZXEsIHJlcykgPT4ge1xyXG5cdHJlcy5zZW5kRmlsZSgnc3lzdGVtLmNvbmZpZy5qcycsIHtyb290OiBfX2Rpcm5hbWUgKyAnLy4uL25nMi1wdWJsaWMnfSk7XHJcbn0pO1xyXG5hcHAudXNlKCcvbmctdXBncmFkZS1hcHAnLCBleHByZXNzLnN0YXRpYyhwYXRoVG9OZ1VwZ3JhZGVQdWJsaWMgKyAnL2FwcCcpKTtcclxuYXBwLnVzZSgnL25nLXVwZ3JhZGUtc3lzdGVtLWNvbmZpZy5qcycsIChyZXEsIHJlcykgPT4ge1xyXG5cdHJlcy5zZW5kRmlsZSgnc3lzdGVtLmNvbmZpZy5qcycsIHtyb290OiBfX2Rpcm5hbWUgKyAnLy4uL25nLXVwZ3JhZGUtcHVibGljJ30pO1xyXG59KTtcclxuXHJcblxyXG5yb3V0ZXIoYXBwKTtcclxuXHJcblxyXG5hcHAuYWxsKCcvbmctZXhhbXBsZSonLCAocmVxLCByZXMpID0+IHtcclxuXHRyZXMuc2VuZEZpbGUoJ2luZGV4Lmh0bWwnLCB7cm9vdDogcGF0aFRvTmdQdWJsaWN9KTtcclxufSk7XHJcbmFwcC5hbGwoJy9uZzItZXhhbXBsZSonLCAocmVxLCByZXMpID0+IHtcclxuXHRyZXMuc2VuZEZpbGUoJ2luZGV4Lmh0bWwnLCB7cm9vdDogcGF0aFRvTmcyUHVibGljfSk7XHJcbn0pO1xyXG5hcHAuYWxsKCcvbmctdXBncmFkZS1leGFtcGxlKicsIChyZXEsIHJlcykgPT4ge1xyXG5cdHJlcy5zZW5kRmlsZSgnaW5kZXguaHRtbCcsIHtyb290OiBwYXRoVG9OZ1VwZ3JhZGVQdWJsaWN9KTtcclxufSk7XHJcbmFwcC5hbGwoJy8qJywgKHJlcSwgcmVzKSA9PiB7XHJcblx0cmVzLnNlbmRGaWxlKCdsYW5kaW5nLmh0bWwnLCB7cm9vdDogX19kaXJuYW1lICsgJy8uLid9KTtcclxufSk7XHJcblxyXG5tb25nb29zZS5Qcm9taXNlID0gZ2xvYmFsLlByb21pc2U7XHJcblxyXG5cclxubW9uZ29vc2UuY29ubmVjdCgnbW9uZ29kYjovL2xvY2FsaG9zdC9uZy11cGdyYWRlLXByb2ZpbGVzJyk7XHJcbm1vbmdvb3NlLmNvbm5lY3Rpb24ub25jZSgnb3BlbicsICgpID0+IHtcclxuXHRjb25zb2xlLmxvZygnTW9uZ29vc2UgY29ubmVjdGVkIHRvIG5nLXVwZ3JhZGUtcHJvZmlsZXMgZGIgYXQgXCJsb2NhbGhvc3Q6MjcwMTdcIicpO1xyXG59KTtcclxuXHJcbmFwcC5saXN0ZW4oJzg3ODcnLCBmdW5jdGlvbiBsaXN0ZW5lcigpIHtcclxuXHRjb25zb2xlLmxvZygnRXhwcmVzcyBhcHAgbGlzdGVuaW5nIGF0IFwiaHR0cDovL2xvY2FsaG9zdDo4Nzg3L1wiJyk7XHJcbn0pO1xyXG5cclxuZXhwb3J0IHsgbW9uZ29vc2UgfTsiXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=
