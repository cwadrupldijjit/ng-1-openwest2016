/// <reference path="../typings/main.d.ts" />
var express = require('express');
var bodyParser = require('body-parser');
var cors = require('cors');
var routes_1 = require('./routes');
var app = express();
var pathToNgPublic = __dirname + '/../ng-public';
var pathToNg2Public = __dirname + '/../ng2-public';
var pathToNgUpgradePublic = __dirname + '/../ng-upgrade-public';
app.use(bodyParser.json());
app.use(cors());
app.use('/node_modules', express.static(__dirname + '/../node_modules'));
app.use('/common-assets', express.static(__dirname + '/../common-assets'));
app.use('/ng-app', express.static(pathToNgPublic + '/app'));
app.use('/ng2-example/ng2-app', express.static(pathToNg2Public + '/app'));
app.use('/ng2-app', express.static(pathToNg2Public + '/app'));
app.use('/ng-upgrade-app', express.static(pathToNgUpgradePublic + '/app'));
routes_1.router(app);
app.all('/ng-example*', function (req, res) {
    res.sendFile('index.html', { root: pathToNgPublic });
});
app.all('/ng2-example*', function (req, res) {
    res.sendFile('index.html', { root: pathToNg2Public });
});
app.all('/ng-upgrade-example*', function (req, res) {
    res.sendFile('index.html', { root: pathToNgUpgradePublic });
});
app.all('/*', function (req, res) {
    res.sendFile('landing.html', { root: __dirname + '/..' });
});
app.listen('8787', function listener() {
    console.log('Express app listening at "http://localhost:8787/"');
});

//# sourceMappingURL=data:application/json;base64,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ZWZlcmVuY2UgcGF0aD1cIi4uL3R5cGluZ3MvbWFpbi5kLnRzXCIgLz5cclxuXHJcbmltcG9ydCBleHByZXNzID0gcmVxdWlyZSgnZXhwcmVzcycpO1xyXG5pbXBvcnQgYm9keVBhcnNlciA9IHJlcXVpcmUoJ2JvZHktcGFyc2VyJyk7XHJcbmltcG9ydCBjb3JzID0gcmVxdWlyZSgnY29ycycpO1xyXG5cclxuaW1wb3J0IHsgcm91dGVyIH0gZnJvbSAnLi9yb3V0ZXMnO1xyXG5cclxubGV0IGFwcCA9IGV4cHJlc3MoKTtcclxubGV0IHBhdGhUb05nUHVibGljID0gX19kaXJuYW1lICsgJy8uLi9uZy1wdWJsaWMnO1xyXG5sZXQgcGF0aFRvTmcyUHVibGljID0gX19kaXJuYW1lICsgJy8uLi9uZzItcHVibGljJztcclxubGV0IHBhdGhUb05nVXBncmFkZVB1YmxpYyA9IF9fZGlybmFtZSArICcvLi4vbmctdXBncmFkZS1wdWJsaWMnO1xyXG5cclxuXHJcbmFwcC51c2UoYm9keVBhcnNlci5qc29uKCkpO1xyXG5hcHAudXNlKGNvcnMoKSk7XHJcblxyXG5cclxuYXBwLnVzZSgnL25vZGVfbW9kdWxlcycsIGV4cHJlc3Muc3RhdGljKF9fZGlybmFtZSArICcvLi4vbm9kZV9tb2R1bGVzJykpO1xyXG5hcHAudXNlKCcvY29tbW9uLWFzc2V0cycsIGV4cHJlc3Muc3RhdGljKF9fZGlybmFtZSArICcvLi4vY29tbW9uLWFzc2V0cycpKTtcclxuXHJcbmFwcC51c2UoJy9uZy1hcHAnLCBleHByZXNzLnN0YXRpYyhwYXRoVG9OZ1B1YmxpYyArICcvYXBwJykpO1xyXG5hcHAudXNlKCcvbmcyLWV4YW1wbGUvbmcyLWFwcCcsIGV4cHJlc3Muc3RhdGljKHBhdGhUb05nMlB1YmxpYyArICcvYXBwJykpO1xyXG5hcHAudXNlKCcvbmcyLWFwcCcsIGV4cHJlc3Muc3RhdGljKHBhdGhUb05nMlB1YmxpYyArICcvYXBwJykpO1xyXG5hcHAudXNlKCcvbmctdXBncmFkZS1hcHAnLCBleHByZXNzLnN0YXRpYyhwYXRoVG9OZ1VwZ3JhZGVQdWJsaWMgKyAnL2FwcCcpKTtcclxuXHJcblxyXG5yb3V0ZXIoYXBwKTtcclxuXHJcblxyXG5hcHAuYWxsKCcvbmctZXhhbXBsZSonLCAocmVxLCByZXMpID0+IHtcclxuXHRyZXMuc2VuZEZpbGUoJ2luZGV4Lmh0bWwnLCB7cm9vdDogcGF0aFRvTmdQdWJsaWN9KTtcclxufSk7XHJcbmFwcC5hbGwoJy9uZzItZXhhbXBsZSonLCAocmVxLCByZXMpID0+IHtcclxuXHRyZXMuc2VuZEZpbGUoJ2luZGV4Lmh0bWwnLCB7cm9vdDogcGF0aFRvTmcyUHVibGljfSk7XHJcbn0pO1xyXG5hcHAuYWxsKCcvbmctdXBncmFkZS1leGFtcGxlKicsIChyZXEsIHJlcykgPT4ge1xyXG5cdHJlcy5zZW5kRmlsZSgnaW5kZXguaHRtbCcsIHtyb290OiBwYXRoVG9OZ1VwZ3JhZGVQdWJsaWN9KTtcclxufSk7XHJcbmFwcC5hbGwoJy8qJywgKHJlcSwgcmVzKSA9PiB7XHJcblx0cmVzLnNlbmRGaWxlKCdsYW5kaW5nLmh0bWwnLCB7cm9vdDogX19kaXJuYW1lICsgJy8uLid9KTtcclxufSk7XHJcblxyXG5cclxuYXBwLmxpc3RlbignODc4NycsIGZ1bmN0aW9uIGxpc3RlbmVyKCkge1xyXG5cdGNvbnNvbGUubG9nKCdFeHByZXNzIGFwcCBsaXN0ZW5pbmcgYXQgXCJodHRwOi8vbG9jYWxob3N0Ojg3ODcvXCInKTtcclxufSk7Il0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9
