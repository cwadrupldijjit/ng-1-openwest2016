(function () {
    'use strict';
    angular
        .module('AppThree.profiles')
        .directive('add', AddDirective);
    function AddDirective() {
        return {
            restrict: 'E',
            templateUrl: '/ng-app/profiles/add/profiles-add.template.html',
            controller: Add,
            controllerAs: 'vm',
            scope: {},
            bindToController: true
        };
    }
    Add.$inject = ['$state', 'ProfileService'];
    function Add($state, ProfileService) {
        var vm = this;
        vm.saveProfile = saveProfile;
        vm.cancelInterestEdit = cancelInterestEdit;
        vm.cancelEditProfile = cancelEditProfile;
        vm.saveInterest = saveInterest;
        vm.deleteInterest = deleteInterest;
        vm.editInterest = editInterest;
        vm.newInterest = '';
        vm.profile = {
            name: 'Eleventh Doctor',
            age: 1245,
            favoriteFood: 'Fish Fingers and Custard',
            interests: []
        };
        vm.interestsEdit = [];
        vm.profile.interests.new = 'something';
        function saveProfile() {
            ProfileService
                .saveProfile(vm.profile)
                .then(function addProfileSuccess(response) {
                $state.go('Profiles.View', { newProfile: response, id: response.id });
            }, function addProfileError(err) {
                alert(err);
            });
        }
        function cancelEditProfile() {
            $state.go('Profiles');
        }
        function cancelInterestEdit(index) {
            if (index === 'new') {
                vm.newInterest = '';
            }
            else {
                vm.profile.interests[index] = vm.interestsEdit[index];
            }
            vm.interestsEdit[index] = '';
        }
        function saveInterest(index) {
            if (index === 'new') {
                vm.profile.interests.push(vm.newInterest);
                vm.newInterest = '';
            }
            vm.interestsEdit[index] = '';
        }
        function deleteInterest(index) {
            try {
                if (index === undefined) {
                    throw ('You\'re trying to delete an interest that doesn\'t exist');
                }
                if (confirm('Are you sure you want to delete this interest?')) {
                    vm.profile.interests.splice(index, 1);
                }
            }
            catch (e) {
                alert(e);
            }
        }
        function editInterest(index) {
            try {
                if (index === undefined) {
                    throw ('You\'re trying to edit an interest that doesn\'t exist');
                }
                if (index === 'new')
                    vm.interestsEdit.new = 'true';
                else
                    vm.interestsEdit[index] = vm.profile.interests[index];
            }
            catch (e) {
                alert(e);
            }
        }
    }
})();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC9wcm9maWxlcy9hZGQvcHJvZmlsZXMtYWRkLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6WyJBZGREaXJlY3RpdmUiLCJBZGQiLCJBZGQuc2F2ZVByb2ZpbGUiLCJBZGQuc2F2ZVByb2ZpbGUuYWRkUHJvZmlsZVN1Y2Nlc3MiLCJBZGQuc2F2ZVByb2ZpbGUuYWRkUHJvZmlsZUVycm9yIiwiQWRkLmNhbmNlbEVkaXRQcm9maWxlIiwiQWRkLmNhbmNlbEludGVyZXN0RWRpdCIsIkFkZC5zYXZlSW50ZXJlc3QiLCJBZGQuZGVsZXRlSW50ZXJlc3QiLCJBZGQuZWRpdEludGVyZXN0Il0sIm1hcHBpbmdzIjoiQUFBQSxDQUFDO0lBQ0EsWUFBWSxDQUFDO0lBRWIsT0FBTztTQUNMLE1BQU0sQ0FBQyxtQkFBbUIsQ0FBQztTQUMzQixTQUFTLENBQUMsS0FBSyxFQUFFLFlBQVksQ0FBQyxDQUFDO0lBRWpDO1FBQ0NBLE1BQU1BLENBQUNBO1lBQ05BLFFBQVFBLEVBQUVBLEdBQUdBO1lBQ2JBLFdBQVdBLEVBQUVBLGlEQUFpREE7WUFDOURBLFVBQVVBLEVBQUVBLEdBQUdBO1lBQ2ZBLFlBQVlBLEVBQUVBLElBQUlBO1lBQ2xCQSxLQUFLQSxFQUFFQSxFQUFFQTtZQUNUQSxnQkFBZ0JBLEVBQUVBLElBQUlBO1NBQ3RCQSxDQUFDQTtJQUNIQSxDQUFDQTtJQUVELEdBQUcsQ0FBQyxPQUFPLEdBQUcsQ0FBQyxRQUFRLEVBQUUsZ0JBQWdCLENBQUMsQ0FBQztJQUUzQyxhQUFhLE1BQU0sRUFBRSxjQUFjO1FBQ2xDQyxJQUFJQSxFQUFFQSxHQUFHQSxJQUFJQSxDQUFDQTtRQUVkQSxFQUFFQSxDQUFDQSxXQUFXQSxHQUFHQSxXQUFXQSxDQUFDQTtRQUM3QkEsRUFBRUEsQ0FBQ0Esa0JBQWtCQSxHQUFHQSxrQkFBa0JBLENBQUNBO1FBQzNDQSxFQUFFQSxDQUFDQSxpQkFBaUJBLEdBQUdBLGlCQUFpQkEsQ0FBQ0E7UUFDekNBLEVBQUVBLENBQUNBLFlBQVlBLEdBQUdBLFlB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QUNBLENBQUNBLENBQUNBO2dCQUNaQSxLQUFLQSxDQUFDQSxDQUFDQSxDQUFDQSxDQUFDQTtZQUNWQSxDQUFDQTtRQUNGQSxDQUFDQTtRQUVEUCxzQkFBc0JBLEtBQUtBO1lBQzFCUSxJQUFJQSxDQUFDQTtnQkFDSkEsRUFBRUEsQ0FBQ0EsQ0FBQ0EsS0FBS0EsS0FBS0EsU0FBU0EsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7b0JBQ3pCQSxNQUFLQSxDQUFDQSx3REFBd0RBLENBQUNBLENBQUNBO2dCQUNqRUEsQ0FBQ0E7Z0JBRURBLEVBQUVBLENBQUNBLENBQUNBLEtBQUtBLEtBQUtBLEtBQUtBLENBQUNBO29CQUNuQkEsRUFBRUEsQ0FBQ0EsYUFBYUEsQ0FBQ0EsR0FBR0EsR0FBR0EsTUFBTUEsQ0FBQ0E7Z0JBQy9CQSxJQUFJQTtvQkFBQ0EsRUFBRUEsQ0FBQ0EsYUFBYUEsQ0FBQ0EsS0FBS0EsQ0FBQ0EsR0FBR0EsRUFBRUEsQ0FBQ0EsT0FBT0EsQ0FBQ0EsU0FBU0EsQ0FBQ0EsS0FBS0EsQ0FBQ0EsQ0FBQ0E7WUFDNURBLENBQUVBO1lBQUFBLEtBQUtBLENBQUNBLENBQUNBLENBQUNBLENBQUNBLENBQUNBLENBQUNBO2dCQUNaQSxLQUFLQSxDQUFDQSxDQUFDQSxDQUFDQSxDQUFDQTtZQUNWQSxDQUFDQTtRQUNGQSxDQUFDQTtJQUNGUixDQUFDQTtBQUNGLENBQUMsQ0FBQyxFQUFFLENBQUMiLCJmaWxlIjoiYXBwL3Byb2ZpbGVzL2FkZC9wcm9maWxlcy1hZGQuZGlyZWN0aXZlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uKCkge1xyXG5cdCd1c2Ugc3RyaWN0JztcclxuXHRcclxuXHRhbmd1bGFyXHJcblx0XHQubW9kdWxlKCdBcHBUaHJlZS5wcm9maWxlcycpXHJcblx0XHQuZGlyZWN0aXZlKCdhZGQnLCBBZGREaXJlY3RpdmUpO1xyXG5cdFxyXG5cdGZ1bmN0aW9uIEFkZERpcmVjdGl2ZSgpIHtcclxuXHRcdHJldHVybiB7XHJcblx0XHRcdHJlc3RyaWN0OiAnRScsXHJcblx0XHRcdHRlbXBsYXRlVXJsOiAnL25nLWFwcC9wcm9maWxlcy9hZGQvcHJvZmlsZXMtYWRkLnRlbXBsYXRlLmh0bWwnLFxyXG5cdFx0XHRjb250cm9sbGVyOiBBZGQsXHJcblx0XHRcdGNvbnRyb2xsZXJBczogJ3ZtJyxcclxuXHRcdFx0c2NvcGU6IHt9LFxyXG5cdFx0XHRiaW5kVG9Db250cm9sbGVyOiB0cnVlXHJcblx0XHR9O1xyXG5cdH1cclxuXHRcclxuXHRBZGQuJGluamVjdCA9IFsnJHN0YXRlJywgJ1Byb2ZpbGVTZXJ2aWNlJ107XHJcblx0XHJcblx0ZnVuY3Rpb24gQWRkKCRzdGF0ZSwgUHJvZmlsZVNlcnZpY2UpIHtcclxuXHRcdHZhciB2bSA9IHRoaXM7XHJcblx0XHRcclxuXHRcdHZtLnNhdmVQcm9maWxlID0gc2F2ZVByb2ZpbGU7XHJcblx0XHR2bS5jYW5jZWxJbnRlcmVzdEVkaXQgPSBjYW5jZWxJbnRlcmVzdEVkaXQ7XHJcblx0XHR2bS5jYW5jZWxFZGl0UHJvZmlsZSA9IGNhbmNlbEVkaXRQcm9maWxlO1xyXG5cdFx0dm0uc2F2ZUludGVyZXN0ID0gc2F2ZUludGVyZXN0O1xyXG5cdFx0dm0uZGVsZXRlSW50ZXJlc3QgPSBkZWxldGVJbnRlcmVzdDtcclxuXHRcdHZtLmVkaXRJbnRlcmVzdCA9IGVkaXRJbnRlcmVzdDtcclxuXHRcdHZtLm5ld0ludGVyZXN0ID0gJyc7XHJcblx0XHR2bS5wcm9maWxlID0ge1xyXG5cdFx0XHRuYW1lOiAnRWxldmVudGggRG9jdG9yJyxcclxuXHRcdFx0YWdlOiAxMjQ1LFxyXG5cdFx0XHRmYXZvcml0ZUZvb2Q6ICdGaXNoIEZpbmdlcnMgYW5kIEN1c3RhcmQnLFxyXG5cdFx0XHRpbnRlcmVzdHM6IFtdXHJcblx0XHR9O1xyXG5cdFx0dm0uaW50ZXJlc3RzRWRpdCA9IFtdO1xyXG5cdFx0XHJcblx0XHR2bS5wcm9maWxlLmludGVyZXN0cy5uZXcgPSAnc29tZXRoaW5nJztcclxuXHRcdFxyXG5cdFx0ZnVuY3Rpb24gc2F2ZVByb2ZpbGUoKSB7XHJcblx0XHRcdFByb2ZpbGVTZXJ2aWNlXHJcblx0XHRcdFx0LnNhdmVQcm9maWxlKHZtLnByb2ZpbGUpXHJcblx0XHRcdFx0XHQudGhlbihmdW5jdGlvbiBhZGRQcm9maWxlU3VjY2VzcyhyZXNwb25zZSkge1xyXG5cdFx0XHRcdFx0XHQkc3RhdGUuZ28oJ1Byb2ZpbGVzLlZpZXcnLCB7bmV3UHJvZmlsZTogcmVzcG9uc2UsIGlkOiByZXNwb25zZS5pZH0pO1xyXG5cdFx0XHRcdFx0fSwgZnVuY3Rpb24gYWRkUHJvZmlsZUVycm9yKGVycikge1xyXG5cdFx0XHRcdFx0XHRhbGVydChlcnIpO1xyXG5cdFx0XHRcdFx0fSk7XHJcblx0XHR9XHJcblx0XHRcclxuXHRcdGZ1bmN0aW9uIGNhbmNlbEVkaXRQcm9maWxlKCkge1xyXG5cdFx0XHQkc3RhdGUuZ28oJ1Byb2ZpbGVzJyk7XHJcblx0XHR9XHJcblx0XHRcclxuXHRcdGZ1bmN0aW9uIGNhbmNlbEludGVyZXN0RWRpdChpbmRleCkge1xyXG5cdFx0XHRpZiAoaW5kZXggPT09ICduZXcnKSB7XHJcblx0XHRcdFx0dm0ubmV3SW50ZXJlc3QgPSAnJztcclxuXHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHR2bS5wcm9maWxlLmludGVyZXN0c1tpbmRleF0gPSB2bS5pbnRlcmVzdHNFZGl0W2luZGV4XTtcclxuXHRcdFx0fVxyXG5cdFx0XHR2bS5pbnRlcmVzdHNFZGl0W2luZGV4XSA9ICcnO1xyXG5cdFx0fVxyXG5cdFx0XHJcblx0XHRmdW5jdGlvbiBzYXZlSW50ZXJlc3QoaW5kZXgpIHtcclxuXHRcdFx0aWYgKGluZGV4ID09PSAnbmV3Jykge1xyXG5cdFx0XHRcdHZtLnByb2ZpbGUuaW50ZXJlc3RzLnB1c2godm0ubmV3SW50ZXJlc3QpO1xyXG5cdFx0XHRcdHZtLm5ld0ludGVyZXN0ID0gJyc7XHJcblx0XHRcdH1cclxuXHRcdFx0dm0uaW50ZXJlc3RzRWRpdFtpbmRleF0gPSAnJztcclxuXHRcdH1cclxuXHRcdFxyXG5cdFx0ZnVuY3Rpb24gZGVsZXRlSW50ZXJlc3QoaW5kZXgpIHtcclxuXHRcdFx0dHJ5IHtcclxuXHRcdFx0XHRpZiAoaW5kZXggPT09IHVuZGVmaW5lZCkge1xyXG5cdFx0XHRcdFx0dGhyb3coJ1lvdVxcJ3JlIHRyeWluZyB0byBkZWxldGUgYW4gaW50ZXJlc3QgdGhhdCBkb2VzblxcJ3QgZXhpc3QnKTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdFx0aWYgKGNvbmZpcm0oJ0FyZSB5b3Ugc3VyZSB5b3Ugd2FudCB0byBkZWxldGUgdGhpcyBpbnRlcmVzdD8nKSkge1xyXG5cdFx0XHRcdFx0dm0ucHJvZmlsZS5pbnRlcmVzdHMuc3BsaWNlKGluZGV4LCAxKTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdH0gY2F0Y2ggKGUpIHtcclxuXHRcdFx0XHRhbGVydChlKTtcclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cdFx0XHJcblx0XHRmdW5jdGlvbiBlZGl0SW50ZXJlc3QoaW5kZXgpIHtcclxuXHRcdFx0dHJ5IHtcclxuXHRcdFx0XHRpZiAoaW5kZXggPT09IHVuZGVmaW5lZCkge1xyXG5cdFx0XHRcdFx0dGhyb3coJ1lvdVxcJ3JlIHRyeWluZyB0byBlZGl0IGFuIGludGVyZXN0IHRoYXQgZG9lc25cXCd0IGV4aXN0Jyk7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHRcdFxyXG5cdFx0XHRcdGlmIChpbmRleCA9PT0gJ25ldycpIFxyXG5cdFx0XHRcdFx0dm0uaW50ZXJlc3RzRWRpdC5uZXcgPSAndHJ1ZSc7XHJcblx0XHRcdFx0ZWxzZSB2bS5pbnRlcmVzdHNFZGl0W2luZGV4XSA9IHZtLnByb2ZpbGUuaW50ZXJlc3RzW2luZGV4XTtcclxuXHRcdFx0fSBjYXRjaCAoZSkge1xyXG5cdFx0XHRcdGFsZXJ0KGUpO1xyXG5cdFx0XHR9XHJcblx0XHR9XHJcblx0fVxyXG59KSgpOyJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==
